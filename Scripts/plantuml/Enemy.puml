@startuml
class Enemy {
    - <<const>> EnemyTag : string = "Enemy"
    - <<const>> PlayerTag : string = "Player"
    - <<const>> DamageInterval : float = 1.0f
    - _damageTimer : float
    + IsTouchingPlayer : bool <<get>>
    + {static} Init(prefab:GameObject, enemyScriptableObject:EnemyScriptableObject, spawnPositionInScreen:Vector3, spawnPositionInWorld:Vector3, container:DiContainer) : Enemy
    + GetSelf() : IEnemy
    - Start() : void
    - Update() : void
    - FixedUpdate() : void
    - Initialize() : void
    - FindPlayer() : void
    - CauseDamage() : void
    - OnTriggerEnter(other:Collider) : void
    - OnTriggerExit(other:Collider) : void
    + SetIsTouchingPlayer(isTouchingPlayer:bool) : void
    + DestroySelf() : void
    - {static} CreateEnemyEventManager() : EventManager
}
class "List`1"<T> {
}
MonoBehaviour <|-- Enemy
IEnemy <|-- Enemy
Enemy --> "_globalEnemyEventManager" GlobalEnemyEventManager
Enemy --> "Position" Vector3
Enemy --> "MainCamera" Camera
Enemy --> "EnemyScriptableObject" EnemyScriptableObject
Enemy --> "PlayerInstance" GameObject
Enemy --> "EventManager" EventManager
Enemy --> "Context" StateContext
Enemy --> "Rigidbody" Rigidbody
Enemy o-> "CloseEnemies<GameObject>" "List`1"
Enemy --> "SpawnPositionInScreen" Vector3
Enemy --> "SpawnPositionInWorld" Vector3
Enemy --> "HitPoint" HitPoint
Enemy --> "AttackParameter" AttackParameter
Enemy --> "Description" Description
Enemy --> "MovementParameter" MovementParameter
@enduml
